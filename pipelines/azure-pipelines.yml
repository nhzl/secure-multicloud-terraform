trigger:
  branches:
    include:
      - master

pool:
  name: Default
  demands: Agent.Name -equals adoagentvm

variables:
  TF_VERSION: '1.5.7'
  TF_DIRECTORY: 'aws'   # parameterize later
  AWS_DEFAULT_REGION: 'us-east-1'

steps:

# ------------------------------
# 1. Checkout Repo
# ------------------------------
- checkout: self

# ------------------------------
# 2. Install Terraform
# ------------------------------
- task: TerraformInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: $(TF_VERSION)

# ------------------------------
# 3. Terraform Init
# ------------------------------
- task: Bash@3
  displayName: 'Terraform Init'
  inputs:
    targetType: 'inline'
    script: |
      cd $(TF_DIRECTORY)
      terraform init

# ------------------------------
# 4. Terraform Validate
# ------------------------------
- task: Bash@3
  displayName: 'Terraform Validate'
  inputs:
    targetType: 'inline'
    script: |
      cd $(TF_DIRECTORY)
      terraform validate

# ------------------------------
# 5. Terraform Plan
# ------------------------------
- task: Bash@3
  displayName: 'Terraform Plan'
  inputs:
    targetType: 'inline'
    script: |
      cd $(TF_DIRECTORY)
      terraform plan -out=tfplan
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)

# ------------------------------
# 6. Terraform Apply (Manual Approval Gate Later)
# ------------------------------
- task: Bash@3
  displayName: 'Terraform Apply'
  inputs:
    targetType: 'inline'
    script: |
      cd $(TF_DIRECTORY)
      terraform apply -auto-approve tfplan
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)